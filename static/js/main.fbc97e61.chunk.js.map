{"version":3,"sources":["Root/menu.js","Contact/buttons.js","Contact/index.js","Projects/index.js","Resume/education.js","Resume/jobs.js","Resume/index.js","About/index.js","Root/index.js","serviceWorker.js","index.js"],"names":["RootMenu","react_default","a","createElement","Menu","Item","name","Link","to","Component","Contact","Button","color","href","Resource","About","Email_Url","io","Github_Url","Linkedin_Url","Container","Segment","Contact_Message","buttons_Contact","Projects","project","index","Label","as","ribbon","title","date","vertical","stack","player","map","vid","idx","key","ReactPlayer_default","url","controls","overview","line","images","image","Image","src","label","_this","this","Title","renderSingleProject","Education","Grid","Degrees","degree","Row","Column","University_Name","College_Name","Degree_Type","Degree_Name","Honors","GPA","Courses","join","Jobs","Work","job","Company","Position","Stack","List","Description","desc","jobs_Jobs","education_Education","columns","divided","Image_Link","alt","Image_Alt","size","circular","Header","Summary","Contact_Contact","Resume_Work","Projects_Projects","Root","HashRouter","menu_RootMenu","Route","exact","path","component","Resume","Boolean","window","location","hostname","match","ReactDOM","render","Root_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbc97e61.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\n\nexport default class RootMenu extends Component {\n  render() {\n    return (\n      <Menu>\n        <Menu.Item name='about'>\n          <Link to='/about'>About</Link>\n        </Menu.Item>\n\n        <Menu.Item name='resume'>\n          <Link to='/resume'>Resume</Link>\n        </Menu.Item>\n \n        <Menu.Item name='projects'>\n          <Link to='/projects'>Projects</Link>\n        </Menu.Item>\n\n        <Menu.Item name='contact'>\n          <Link to='/contact'>Contact</Link>\n        </Menu.Item>\n     </Menu>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { IoIosMail, IoLogoGithub, IoLogoLinkedin } from 'react-icons/io';\n\nimport Resource from '../Resource';\n\nexport default class Contact extends Component {\n  render() {\n    return (\n      <div>\n        <Button\n          color='google plus'\n          href={ Resource.About.Email_Url }\n        ><IoIosMail /> Email</Button>\n        <Button\n          color='grey'\n          href={ Resource.About.Github_Url }\n        ><IoLogoGithub /> Github</Button>\n        <Button\n          color='linkedin'\n          href={ Resource.About.Linkedin_Url }\n        ><IoLogoLinkedin /> Linkedin</Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\n\nimport ContactButtons from './buttons';\nimport Resource from '../Resource';\n\nexport default class Contact extends Component {\n  render() {\n    return (\n      <Container>\n        <Segment>\n          <p>{ Resource.About.Contact_Message }</p>\n          <ContactButtons />\n        </Segment>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Image, Label, Segment } from 'semantic-ui-react';\nimport ReactPlayer from 'react-player';\n\nimport Resource from '../Resource';\n\nexport default class Projects extends Component {\n  renderSingleProject(project, index) {\n    return (\n      <Segment>\n        <Label as='a' color='red' ribbon>\n          <h3>{ project.title }</h3>\n        </Label>\n        <span>{ project.date }</span>\n\n        <Segment vertical>\n            <p>{ project.stack }</p>\n        </Segment>\n\n        \n        {project.player.map((vid, idx) =>\n          <Segment vertical key={ idx }>\n            <ReactPlayer url={ vid } controls />\n          </Segment>\n        )}\n\n        <Segment vertical>\n          {project.overview.map((line, idx) =>\n            <p key={ idx }>{ line }</p>\n          )}\n        </Segment>\n\n        {project.images.map((image, idx) =>\n          <Segment vertical key={ idx }>\n            <Image src={ image.url } />\n            <p>{ image.label }</p>\n          </Segment>\n        )}\n      </Segment>\n    );\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>{ Resource.Projects.Title }</h1>\n\n        {Resource.Projects.Projects.map((project, idx) =>\n          { return this.renderSingleProject(project, idx) }\n        )}\n      </Container>      \n    );\n  }\n} \n","import React, { Component } from 'react';\nimport { Container, Grid, Label, Segment } from 'semantic-ui-react';\n\nimport Resource from '../Resource';\n\nexport default class Education extends Component {\n  render() {\n    return (\n      <Container>\n        <h1>{ Resource.Education.Title }</h1>\n        <Grid>\n          {Resource.Education.Degrees.map(function(degree, index) {\n            return (\n              <Grid.Row key={ index }>\n                <Grid.Column>\n                  <Segment>\n                    <Label as='a' color='red' ribbon>\n                      <h3>{ degree.University_Name }</h3>\n                    </Label>\n                    <span><strong>{ degree.College_Name }</strong>, { degree.Degree_Type } in { degree.Degree_Name }</span>\n\n                    <Segment vertical>\n                      <p>{ degree.Honors } -- { degree.GPA }</p>\n                    </Segment>\n\n                    <Segment vertical>\n                      <p>{ degree.Courses.join(\", \") }</p>\n                    </Segment>\n\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n            );\n          })}\n        </Grid>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Grid, Label, List, Segment } from 'semantic-ui-react';\n\nimport Resource from '../Resource';\n\nexport default class Jobs extends Component {\n  render() {\n    return (\n      <Container>\n        <h1>{ Resource.Work.Title }</h1>\n        <Grid>\n          {Resource.Work.Jobs.map(function(job, index) {\n            return (\n              <Grid.Row key={ index }>\n                <Grid.Column>\n                  <Segment>\n                    <Label as='a' color='red' ribbon>\n                      <h3>{ job.Company }</h3>\n                    </Label>\n                    <span>{ job.Position }</span>\n\n                    <Segment vertical>\n                      <p>{job.Stack.join(\", \")}</p>\n                    </Segment>\n\n                    <Segment vertical>\n                      <List as='ul'>\n                        {job.Description.map(function(desc, idx) {\n                          return <List.Item as='li' key={ idx }>{ desc }</List.Item>;\n                        })}\n                      </List>\n                    </Segment>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n            );\n          })}\n        </Grid>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Education from './education';\nimport Jobs from './jobs';\n\n\nexport default class Work extends Component {\n  render() {\n    return (\n      <div>\n        <Jobs />\n        <br />\n        <Education />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Grid, Image } from 'semantic-ui-react';\n\nimport Contact from '../Contact';\nimport Projects from '../Projects';\nimport Resource from '../Resource';\nimport Resume from '../Resume';\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <h1>{ Resource.About.Title }</h1>\n          <Grid columns={2} divided>\n            <Grid.Row>\n              <Grid.Column>\n                <Image src={ Resource.About.Image_Link } alt={ Resource.About.Image_Alt } size='large' circular />\n              </Grid.Column>\n\n              <Grid.Column>\n                <h3>{ Resource.About.Header }</h3>\n                <p>{ Resource.About.Summary }</p>\n                <Contact />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n\n        <Resume />\n        <Projects />\n        <Contact />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport RootMenu from './menu';\nimport About from '../About';\nimport Contact from '../Contact';\nimport Projects from '../Projects';\nimport Resume from '../Resume';\n\nexport default class Root extends Component {\n  render() {\n    return (\n        <HashRouter>\n          <div>\n            <RootMenu />\n\n            <Route exact path=\"/\" component={About}/>\n            <Route path=\"/about\" component={About}/>\n            <Route path=\"/resume\" component={Resume}/>\n            <Route path=\"/projects\" component={Projects}/>\n            <Route path=\"/contact\" component={Contact}/>\n          </div>\n        </HashRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}