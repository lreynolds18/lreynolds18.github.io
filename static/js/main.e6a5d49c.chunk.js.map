{"version":3,"sources":["Contact/buttons.js","Contact/index.js","About/bio.js","Projects/index.js","Resume/education.js","Resume/jobs.js","Resume/index.js","About/index.js","Root/error404.js","Root/menu.js","Root/index.js","serviceWorker.js","index.js"],"names":["Contact","react_default","a","createElement","react","Button","color","href","Resource","About","Email_Url","io","Github_Url","Linkedin_Url","Component","Container","textAlign","Segment","Contact_Message","buttons_Contact","Bio","Header","as","Title","Grid","columns","divided","Row","Column","Image","src","Image_Link","alt","Image_Alt","size","circular","Summary","Contact_Contact","Projects","project","index","key","Label","ribbon","Start_Date","End_Date","vertical","Stack","Player","map","vid","idx","centered","ReactPlayer_default","url","controls","List","Overview","desc","Item","Images","image","Url","_this","this","renderSingleProject","Education","Degrees","degree","University_Name","College_Name","Degree_Type","Degree_Name","Honors","GPA","Courses","join","Jobs","Work","job","Company","Position","Description","Resume","jobs_Jobs","education_Education","bio_Bio","Resume_Resume","Projects_Projects","RootMenu","Menu","name","Link","to","Root","HashRouter","menu_RootMenu","Switch","Route","exact","path","component","Error404","Boolean","window","location","hostname","match","ReactDOM","render","Root_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6a5d49c.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { IoIosMail, IoLogoGithub, IoLogoLinkedin } from 'react-icons/io';\n\nimport Resource from '../Resource';\n\nexport default class Contact extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Button\n          color='red'\n          href={ Resource.About.Email_Url }\n        ><IoIosMail /> Email</Button>\n        <Button\n          color='grey'\n          href={ Resource.About.Github_Url }\n        ><IoLogoGithub /> Github</Button>\n        <Button\n          color='linkedin'\n          href={ Resource.About.Linkedin_Url }\n        ><IoLogoLinkedin /> Linkedin</Button>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\n\nimport ContactButtons from './buttons';\nimport Resource from '../Resource';\n\nexport default class Contact extends Component {\n  render() {\n    return (\n      <Container textAlign=\"center\">\n        <Segment>\n          <p>{ Resource.About.Contact_Message }</p>\n          <ContactButtons />\n        </Segment>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Grid, Header, Image } from 'semantic-ui-react';\n\nimport Contact from '../Contact';\nimport Resource from '../Resource';\n\nexport default class Bio extends Component {\n  render() {\n    return (\n      <Container>\n          <Header as='h1'>{ Resource.About.Title }</Header>\n\n          <Grid columns={ 2 } divided>\n            <Grid.Row>\n              <Grid.Column>\n                <Image src={ Resource.About.Image_Link } alt={ Resource.About.Image_Alt } size='large' circular />\n              </Grid.Column>\n\n              <Grid.Column>\n                <h3>{ Resource.About.Header }</h3>\n                <p>{ Resource.About.Summary }</p>\n                <Contact />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Grid, Header, Image, Label, List, Segment } from 'semantic-ui-react';\nimport ReactPlayer from 'react-player';\n\nimport Resource from '../Resource';\n\nexport default class Projects extends Component {\n  renderSingleProject(project, index) {\n    return (\n      <Segment key={ index }>\n        <Label as='a' color='red' ribbon>\n          <h3>{ project.Title }</h3>\n        </Label>\n        <span>{ project.Start_Date } - { project.End_Date }</span>\n\n        <Segment vertical>\n            <p>{ project.Stack }</p>\n        </Segment>\n\n        <Grid>\n          {project.Player.map((vid, idx) =>\n            <Grid.Row centered key={ idx}>\n              <Segment vertical>\n                <ReactPlayer url={ vid } controls centered />\n              </Segment>\n            </Grid.Row>\n          )}\n        </Grid>\n\n        <Segment vertical>\n          <List as='ul'>\n            {project.Overview.map((desc, idx) =>\n              <List.Item as='li' key={ idx }>{ desc }</List.Item>\n            )}\n          </List>\n        </Segment>\n\n        {project.Images.map((image, idx) =>\n          <Segment vertical textAlign='center' key={ idx }>\n            <Image src={ image.Url } size='large' centered />\n            <p>{ image.Label }</p>\n          </Segment>\n        )}\n      </Segment>\n    );\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header as='h1'>{ Resource.Projects.Title }</Header>\n\n        {Resource.Projects.Projects.map((project, idx) =>\n          { return this.renderSingleProject(project, idx) }\n        )}\n      </Container>      \n    );\n  }\n} \n","import React, { Component } from 'react';\nimport { Container, Grid, Header, Label, Segment } from 'semantic-ui-react';\n\nimport Resource from '../Resource';\n\nexport default class Education extends Component {\n  render() {\n    return (\n      <Container>\n        <Header as='h1'>{ Resource.Education.Title }</Header>\n\n        <Grid>\n          {Resource.Education.Degrees.map(function(degree, index) {\n            return (\n              <Grid.Row key={ index }>\n                <Grid.Column>\n                  <Segment>\n                    <Label as='a' color='red' ribbon>\n                      <h3>{ degree.University_Name }</h3>\n                    </Label>\n                    <span><strong>{ degree.College_Name }</strong>, { degree.Degree_Type } in { degree.Degree_Name }</span>\n\n                    <Segment vertical>\n                      <p>{ degree.Honors } -- { degree.GPA }</p>\n                    </Segment>\n\n                    <Segment vertical>\n                      <p>{ degree.Courses.join(\", \") }</p>\n                    </Segment>\n\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n            );\n          })}\n        </Grid>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Grid, Header, Label, List, Segment } from 'semantic-ui-react';\n\nimport Resource from '../Resource';\n\nexport default class Jobs extends Component {\n  render() {\n    return (\n      <Container>\n        <Header as='h1'>{ Resource.Work.Title }</Header>\n\n        <Grid>\n          {Resource.Work.Jobs.map(function(job, index) {\n            return (\n              <Grid.Row key={ index }>\n                <Grid.Column>\n                  <Segment>\n                    <Label as='a' color='red' ribbon>\n                      <h3>{ job.Company }</h3>\n                    </Label>\n                    <span>{ job.Position }, { job.Start_Date } - { job.End_Date }</span>\n\n                    <Segment vertical>\n                      <p>{ job.Stack.join(\", \") }</p>\n                    </Segment>\n\n                    <Segment vertical>\n                      <List as='ul'>\n                        {job.Description.map(function(desc, idx) {\n                          return <List.Item as='li' key={ idx }>{ desc }</List.Item>;\n                        })}\n                      </List>\n                    </Segment>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n            );\n          })}\n        </Grid>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Grid } from 'semantic-ui-react';\n\nimport Education from './education';\nimport Jobs from './jobs';\n\nexport default class Resume extends Component {\n  render() {\n    return (\n      <Container>\n        <Grid>\n          <Grid.Row>\n            <Jobs />\n          </Grid.Row>\n          <Grid.Row>\n            <Education />\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Grid } from 'semantic-ui-react';\n\nimport AboutBio from './bio';\nimport Contact from '../Contact';\nimport Projects from '../Projects';\n\nimport Resume from '../Resume';\n\nexport default class About extends Component {\n  render() {\n    return (\n      <Container>\n      <Grid>\n        <Grid.Row>\n          <AboutBio />\n        </Grid.Row>\n\n        <Grid.Row>\n          <Resume />\n        </Grid.Row>\n\n        <Grid.Row>\n          <Projects />\n        </Grid.Row>\n\n        <Grid.Row>\n          <Contact />\n        </Grid.Row>\n      </Grid>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container, Header } from 'semantic-ui-react';\n\nexport default class RootMenu extends Component {\n  render() {\n    return (\n      <Container textAlign=\"center\">\n        <Header as=\"h2\">The route requested was not found :(</Header>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\n\nexport default class RootMenu extends Component {\n  render() {\n    return (\n      <Menu>\n        <Menu.Item name='about'>\n          <Link to='/about'>About</Link>\n        </Menu.Item>\n\n        <Menu.Item name='resume'>\n          <Link to='/resume'>Resume</Link>\n        </Menu.Item>\n \n        <Menu.Item name='projects'>\n          <Link to='/projects'>Projects</Link>\n        </Menu.Item>\n\n        <Menu.Item name='contact'>\n          <Link to='/contact'>Contact</Link>\n        </Menu.Item>\n     </Menu>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport About from '../About';\nimport Contact from '../Contact';\nimport Error404 from './error404';\nimport Projects from '../Projects';\nimport Resume from '../Resume';\nimport RootMenu from './menu';\n\nexport default class Root extends Component {\n  render() {\n    return (\n        <HashRouter>\n          <Fragment>\n            <RootMenu />\n\n            <Switch>\n              <Route exact path=\"/\" component={ About } />\n              <Route path=\"/about\" component={ About } />\n              <Route path=\"/resume\" component={ Resume } />\n              <Route path=\"/projects\" component={ Projects } />\n              <Route path=\"/contact\" component={ Contact } />\n              <Route component={ Error404 } />\n            </Switch>\n          </Fragment>\n        </HashRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}